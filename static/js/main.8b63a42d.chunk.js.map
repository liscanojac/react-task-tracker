{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","response","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b63a42d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n\n    // onClick function\n    // const onClick = () => {\n    //     console.log('click');\n    // }\n\n    return (\n        // so with this component we can can pass it whatever inner text and style we like and get different buttons from it\n        <button onClick={onClick} className='btn' style={{backgroundColor: color}}>{text}</button>\n    )\n}\n\n// setting some default properties for our button component\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Button\n","// this is the same object Header.propTypes, this makes it work in the header\nimport PropTypes from 'prop-types'\n\n// importing the button\nimport Button from './Button'\n\n// that title argument is object destructuring in ES6\nconst Header = ({ title, onAdd, showAdd }) => {\n\n    // onClick function\n    // const onClick = () => {\n    //     console.log('Click');\n    // };\n\n    return (\n        // the className of header is added to follow the classes in style.css\n        <header className = 'header'>\n            <h1>{title}</h1>\n            <Button \n                color={showAdd ? 'red' : 'green'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} />\n                {/* in this button dependind on the value of showAddTask(true/false) the bottun will show some text and color or another */}\n            {/* this is the button imported */}\n            {/* we are adding some propetis to get its own style */}\n\n            {/* we got this element into its own component to get it later */}\n            {/* <button className='btn'>Add</button> */}\n\n            {/* <h1 style= {{color: 'red', backgroundColor: 'black'}}>{title}</h1> */}\n            {/* above its how you inline style css in components  with double curly braces  */}\n\n            {/* <h1 style= {headingStyle}>{title}</h1> */}\n            {/* above it is how you inline style with a external variable to add css just declare an objet and pass it with curly braces */}\n        </header>\n    )\n}\n\n// Here we can set deafult props in case we dont pass any value to the function it gets those values\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\n// this is to protect the property passed, this way only string can be passed as a title\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n// here is the css styling object \n// const headingStyle = {\n//     color: 'blue',\n//     backgroundColor: 'teal'\n// }\n\nexport default Header\n","// this is the X icon\n// import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        // and here we are adding the function toggleReminder to the whole div on a doubleClick event\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {/* in the app.js we created the deleteTAsk function */}\n                {task.text}<p style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)}>x</p>          \n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","// this array was for testing purposes and it prints a list with 3 h3 with text of each as innerHTML\n// const tasks = [\n//     {\n//         id: 1,\n//         text: 'Doctors Appointment',\n//         day: 'Feb 5th at 2:30pm',\n//         remainder: true\n//     },\n//     {\n//         id: 2,\n//         text: 'Meeting at School',\n//         day: 'Feb 6th at 1:30pm',\n//         remainder: true\n//     },\n//     {\n//         id: 3,\n//         text: 'Food Shopping',\n//         day: 'Feb 5th at 2:30pm',\n//         remainder: false\n//     },\n// ]\n\nimport Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {/* here we are taking tasks and passing through the array with the map method */}\n            {/* when you pass a map method you create a list and in react a list has to have a key unique property, thats why the task.id is passed as argument there */}\n            {tasks.map((task) => (\n                // <h3 key={task.id}>{task.text}</h3>)\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from \"react\"\n\n\n\nconst AddTask = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        // clearing the form again\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type=\"submit\" value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","// import { FaTimes } from 'react-icons/fa'\n\nimport Header from \"./components/Header\";\n// here I'm importing the header element \n\nimport Tasks from \"./components/Tasks\";\n// importing the tasks component\n\nimport { useState, useEffect } from \"react\"\n// importing the tasks object\n\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n\n  // here we are making that Add button to show/hide the AddTask form\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([])\n\n\n  // here we are gettin the data from db.json\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data;\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data;\n  }\n\n  // const [tasks, setTasks] = useState([\n  //   {\n  //       id: 1,\n  //       text: 'Doctors Appointment',\n  //       day: 'Feb 5th at 2:30pm',\n  //       reminder: true\n  //   },\n  //   {\n  //       id: 2,\n  //       text: 'Meeting at School',\n  //       day: 'Feb 6th at 1:30pm',\n  //       reminder: true\n  //   },\n  //   {\n  //       id: 3,\n  //       text: 'Food Shopping',\n  //       day: 'Feb 5th at 2:30pm',\n  //       reminder: false\n  //   },\n  // ]);\n\n  // Add Task function \n  const addTask = async (task) => {\n\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await response.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 1000) + 1;\n    // here we create a new object with that id\n    // const newTask = {id, ...task}\n    // and here we add it to the setTasks array\n    // setTasks([...tasks, newTask])\n  }\n\n  // DeleteTask Function\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  // Toggle Reminder - this changes the task style depending if the remainder property is true or false\n// the map changes the remainder property to tru/false depending on the case\n\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await response.json()\n    \n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder} : task\n      )\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {/* we wrap addTask in curly braces to be dependant of the Add button */}\n      {/* that is a way to make an if, if showAddTask its true then show the AddTask component */}\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {/* this is how you get imported element in your app */}\n      {/* here you have to pass the delete function to how in tasks and subsequientally in task */}\n      {/* we wrap tasks in curly braces to make a message where no tasks are left */}\n      {/* and then we add an if tasks.length > 0 then show those Tasks elements otherwise show a message */}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks to show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}